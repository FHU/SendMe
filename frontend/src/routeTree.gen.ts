/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as MessagesIndexImport } from './routes/messages/index'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as ConversationIndexImport } from './routes/conversation/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as HomeCreateIndexImport } from './routes/home/create/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MessagesIndexRoute = MessagesIndexImport.update({
  id: '/messages/',
  path: '/messages/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

const ConversationIndexRoute = ConversationIndexImport.update({
  id: '/conversation/',
  path: '/conversation/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const HomeCreateIndexRoute = HomeCreateIndexImport.update({
  id: '/home/create/',
  path: '/home/create/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/conversation/': {
      id: '/conversation/'
      path: '/conversation'
      fullPath: '/conversation'
      preLoaderRoute: typeof ConversationIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
    '/messages/': {
      id: '/messages/'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/create/': {
      id: '/home/create/'
      path: '/home/create'
      fullPath: '/home/create'
      preLoaderRoute: typeof HomeCreateIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/conversation': typeof ConversationIndexRoute
  '/home': typeof HomeIndexRoute
  '/messages': typeof MessagesIndexRoute
  '/home/create': typeof HomeCreateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/conversation': typeof ConversationIndexRoute
  '/home': typeof HomeIndexRoute
  '/messages': typeof MessagesIndexRoute
  '/home/create': typeof HomeCreateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/': typeof AuthIndexRoute
  '/conversation/': typeof ConversationIndexRoute
  '/home/': typeof HomeIndexRoute
  '/messages/': typeof MessagesIndexRoute
  '/home/create/': typeof HomeCreateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/conversation'
    | '/home'
    | '/messages'
    | '/home/create'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/conversation' | '/home' | '/messages' | '/home/create'
  id:
    | '__root__'
    | '/'
    | '/auth/'
    | '/conversation/'
    | '/home/'
    | '/messages/'
    | '/home/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  ConversationIndexRoute: typeof ConversationIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  MessagesIndexRoute: typeof MessagesIndexRoute
  HomeCreateIndexRoute: typeof HomeCreateIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  ConversationIndexRoute: ConversationIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  MessagesIndexRoute: MessagesIndexRoute,
  HomeCreateIndexRoute: HomeCreateIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/",
        "/conversation/",
        "/home/",
        "/messages/",
        "/home/create/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/conversation/": {
      "filePath": "conversation/index.tsx"
    },
    "/home/": {
      "filePath": "home/index.tsx"
    },
    "/messages/": {
      "filePath": "messages/index.tsx"
    },
    "/home/create/": {
      "filePath": "home/create/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
